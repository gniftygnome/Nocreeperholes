plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
	id "com.jfrog.artifactory" version "4.15.2"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

if(rootProject.file("private.gradle").exists()) { //Publishing details
	apply from: "private.gradle"
}

archivesBaseName = "${project.archives_base_name}"
group = "${project.maven_group}"
version = "${project.mod_version}+${project.minecraft_version}"

minecraft {
	accessWidener = file("src/main/resources/nocreeperholes.aw")
}

repositories {
	maven { url "https://server.bbkr.space/artifactory/libs-release" } // Cotton maven - home of Cotton projects
	maven { url "https://maven.abusedmaster.xyz" } // NerdHub maven
	maven {
		name = "Onyx Studios"
		url = "https://maven.onyxstudios.dev"
	}
	maven { url 'https://jitpack.io' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				classifier null
				builtBy remapJar
			}

			/*artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
				classifier "dev"
				builtBy remapJar
			}*/

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

artifactory {
	if (project.hasProperty("artifactoryUsername")) {
		contextUrl = "https://server.bbkr.space/artifactory/"
		publish {
			repository {
				if (version.contains("SNAPSHOT")) {
					repoKey = "libs-snapshot"
				} else {
					repoKey = "libs-release"
				}

				username = artifactoryUsername
				password = artifactoryPassword
			}
			defaults {
				publications("maven")

				publishArtifacts = true
				publishPom = true
			}
		}
	} else {
		println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
	}
}